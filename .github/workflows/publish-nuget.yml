name: Publish NuGet Packages

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Select the release branch'
        required: true
        default: 'release/main'

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Validate branch
      id: validate_branch
      run: |
        if [[ "${{ github.event.inputs.branch }}" != release/* ]]; then
          echo "This workflow can only be run on release branches."
          exit 1
        fi

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Set up .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Run versioning script
      run: bash ./versioning.sh
      id: versioning

    - name: Build Common
      working-directory: ./src/dotnet/Common
      run: dotnet build --configuration Release -p:GITHUB_ACTIONS=true

    - name: Build CoreClient
      working-directory: ./src/dotnet/CoreClient
      run: dotnet build --configuration Release -p:GITHUB_ACTIONS=true

    - name: Build ManagementClient
      working-directory: ./src/dotnet/ManagementClient
      run: dotnet build --configuration Release -p:GITHUB_ACTIONS=true

    - name: Pack Common
      working-directory: ./src/dotnet/Common
      run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.versioning.outputs.version }} -p:GITHUB_ACTIONS=true --output ./nupkg

    - name: Pack CoreClient
      working-directory: ./src/dotnet/CoreClient
      run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.versioning.outputs.version }} -p:GITHUB_ACTIONS=true --output ./nupkg

    - name: Pack ManagementClient
      working-directory: ./src/dotnet/ManagementClient
      run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.versioning.outputs.version }} -p:GITHUB_ACTIONS=true --output ./nupkg

    - name: Publish Common to NuGet
      working-directory: ./src/dotnet/Common
      run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Publish CoreClient to NuGet
      working-directory: ./src/dotnet/CoreClient
      run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Publish ManagementClient to NuGet
      working-directory: ./src/dotnet/ManagementClient
      run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
